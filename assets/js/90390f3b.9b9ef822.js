"use strict";(self.webpackChunknanocosomos_documentation=self.webpackChunknanocosomos_documentation||[]).push([[5621],{14679:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"webrtc-v5/nanostream_webrtc_speech_music","title":"Speech / Music Streaming","description":"Since Webcaster version 5.8.0 additional audio preprocessing options are available.","source":"@site/docs/webrtc-v5/nanostream_webrtc_speech_music.md","sourceDirName":"webrtc-v5","slug":"/webrtc-v5/nanostream_webrtc_speech_music","permalink":"/docs/webrtc-v5/nanostream_webrtc_speech_music","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1752847376000,"frontMatter":{"id":"nanostream_webrtc_speech_music","title":"Speech / Music Streaming","sidebar_label":"Speech / Music Streaming"},"sidebar":"nanoStream Webcaster V5","previous":{"title":"Audio- / Video-Only","permalink":"/docs/webrtc-v5/nanostream_webrtc_audio_video_only"},"next":{"title":"External Streams / Mixing","permalink":"/docs/webrtc-v5/nanostream_webrtc_set_mediastream"}}');var o=i(74848),s=i(28453);const r={id:"nanostream_webrtc_speech_music",title:"Speech / Music Streaming",sidebar_label:"Speech / Music Streaming"},a=void 0,c={},l=[{value:"Speech audio",id:"speech-audio",level:2},{value:"Music audio",id:"music-audio",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Since Webcaster version 5.8.0 additional audio preprocessing options are available.",(0,o.jsx)("br",{}),"\nAdditionally to configuring bitrates (",(0,o.jsx)(n.a,{href:"./nanostream_webrtc_quality/",children:"Features > Quality Settings"}),"),\nit is from now on possible to disable or enable the following filters explicitly:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"autoGainControl"})," - Attempts to automatically maintain a steady overall volume level."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"echoCancellation"})," - Attempts to prevent echo effects."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"noiseSuppression"})," - Automatically filters the audio to remove background noise."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Depending on the use case it can make sense to disable or enable all of those filters at once. ",(0,o.jsx)("br",{}),"\nIn general there are two different types of audio content:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Audio containing ",(0,o.jsx)(n.strong,{children:"speech"})]}),"\n",(0,o.jsxs)(n.li,{children:["Audio containing ",(0,o.jsx)(n.strong,{children:"music"})]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{title:"recommendation",type:"tip",children:(0,o.jsxs)(n.p,{children:["We recommend setting all of the above filters to ",(0,o.jsx)(n.code,{children:"true"})," for speech/voice streams and all of them to ",(0,o.jsx)(n.code,{children:"false"})," for music streaming.\nOn most systems these filters will be on by default."]})}),"\n",(0,o.jsx)(n.h2,{id:"speech-audio",children:"Speech audio"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"var videoDeviceConfig = {\n  device: 0, // use first video device\n  source: 'camera'\n};\n\n// set all filters to 'true' for streaming voice/speech\nvar audioDeviceConfig = {\n  device: 0, // use first audio device\n  echoCancellation: true,\n  autoGainControl: true,\n  noiseSuppression: true\n};\n\nvar videoElement = 'video-local'; // preview stream in <video id=\"video-local\"> tag\n\nvar previewConfig = {\n  videoDeviceConfig: videoDeviceConfig,\n  audioDeviceConfig: audioDeviceConfig,\n  elementId: videoElement\n};\n\n// Start the preview\nrtcuser.startPreview(previewConfig);\n\n"})}),"\n",(0,o.jsx)(n.h2,{id:"music-audio",children:"Music audio"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"var videoDeviceConfig = {\n  device: 0, // use first video device\n  source: 'camera'\n};\n\n// set all filters to 'false' for streaming music\nvar audioDeviceConfig = {\n  device: 0, // use first audio device\n  echoCancellation: false,\n  autoGainControl: false,\n  noiseSuppression: false\n};\n\nvar videoElement = 'video-local'; // preview stream in <video id=\"video-local\"> tag\n\nvar previewConfig = {\n  videoDeviceConfig: videoDeviceConfig,\n  audioDeviceConfig: audioDeviceConfig,\n  elementId: videoElement\n};\n\n// start the preview\nrtcuser.startPreview(previewConfig);\n\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(96540);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);