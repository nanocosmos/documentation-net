"use strict";(self.webpackChunknanocosomos_documentation=self.webpackChunknanocosomos_documentation||[]).push([[7678],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var o=t(96540);const i={},a=o.createContext(i);function r(e){const n=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(a.Provider,{value:n},e.children)}},80794:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"webrtc/nanostream_webrtc_audio_video_only","title":"Audio-Only / Video-Only","description":"In addition to streaming both, audio and video, you can stream Audio-Only and Video-Only with the nanoStream Webcaster.","source":"@site/docs/webrtc/nanostream_webrtc_audio_video_only.md","sourceDirName":"webrtc","slug":"/webrtc/nanostream_webrtc_audio_video_only","permalink":"/docs/webrtc/nanostream_webrtc_audio_video_only","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1752847376000,"frontMatter":{"id":"nanostream_webrtc_audio_video_only","title":"Audio-Only / Video-Only","sidebar_label":"Audio-Only / Video-Only"},"sidebar":"nanoStream Webcaster","previous":{"title":"Device Selection","permalink":"/docs/webrtc/nanostream_webrtc_device_selection"},"next":{"title":"Stats and Metrics","permalink":"/docs/webrtc/nanostream_webrtc_stats_and_metrics"}}');var i=t(74848),a=t(28453);const r={id:"nanostream_webrtc_audio_video_only",title:"Audio-Only / Video-Only",sidebar_label:"Audio-Only / Video-Only"},s=void 0,d={},c=[{value:"Audio-Only Streaming",id:"audio-only-streaming",level:2},{value:"Video-Only Streaming",id:"video-only-streaming",level:2}];function l(e){const n={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["In addition to streaming both, audio and video, you can stream Audio-Only and Video-Only with the nanoStream Webcaster.",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(n.p,{children:["Audio-Only or Video-Only streaming is enabled by setting ",(0,i.jsx)(n.code,{children:"audioVideoOnly"})," property of the ",(0,i.jsx)(n.code,{children:"mediaStreamCfg"})," to either ",(0,i.jsx)(n.code,{children:"video"})," or ",(0,i.jsx)(n.code,{children:"audio"})," in the configuration object passed to the constructor of the API.",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h2,{id:"audio-only-streaming",children:"Audio-Only Streaming"}),"\n",(0,i.jsx)(n.admonition,{title:"audio-only streaming",type:"tip",children:(0,i.jsxs)(n.p,{children:["To start Audio-Only streaming, we pass ",(0,i.jsx)(n.code,{children:"audio"})," in ",(0,i.jsx)(n.code,{children:"mediaStreamCfg.audioVideoOnly"})," ."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"const webcaster = new window.WebcasterApiV6.Webcaster({\n    inputCfg: {\n        mediaStreamCfg: {\n            audioVideoOnly: 'audio'\n        }\n    },\n    ingestUrl: 'rtmp://bintu-stream.nanocosmos.de:1935/live',\n    serverUrl: 'https://bintu-webrtc.nanocosmos.de/p/webrtc',\n    streamName: '<STREAM-NAME-1>'\n});\n\nawait webcaster.setup()\nawait webcaster.startBroadcast()\n"})}),"\n",(0,i.jsx)(n.h2,{id:"video-only-streaming",children:"Video-Only Streaming"}),"\n",(0,i.jsx)(n.admonition,{title:"video-only streaming",type:"tip",children:(0,i.jsxs)(n.p,{children:["To start Video-Only streaming, we pass ",(0,i.jsx)(n.code,{children:"video"})," in ",(0,i.jsx)(n.code,{children:"mediaStreamCfg.audioVideoOnly"})," ."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"const webcaster = new window.WebcasterApiV6.Webcaster({\n    inputCfg: {\n        mediaStreamCfg: {\n            audioVideoOnly: 'video'\n        }\n    },\n    ingestUrl: 'rtmp://bintu-stream.nanocosmos.de:1935/live',\n    serverUrl: 'https://bintu-webrtc.nanocosmos.de/p/webrtc',\n    streamName: '<STREAM-NAME-1>'\n});\n\nawait webcaster.setup()\nawait webcaster.startBroadcast()\n"})})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);