"use strict";(self.webpackChunknanocosomos_documentation=self.webpackChunknanocosomos_documentation||[]).push([[1564],{21539:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"nanoplayer/nanoplayer_getting_started","title":"Getting started","description":"Embedding H5Live player on your own web page","source":"@site/docs/nanoplayer/nanoplayer_getting_started.md","sourceDirName":"nanoplayer","slug":"/nanoplayer/nanoplayer_getting_started","permalink":"/docs/nanoplayer/nanoplayer_getting_started","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1752847376000,"frontMatter":{"id":"nanoplayer_getting_started","title":"Getting started","sidebar_label":"Getting started"},"sidebar":"H5Live Player","previous":{"title":"Introduction","permalink":"/docs/nanoplayer/nanoplayer_introduction"},"next":{"title":"Supported Browsers","permalink":"/docs/nanoplayer/nanoplayer_supported_browsers"}}');var r=t(74848),a=t(28453);const o={id:"nanoplayer_getting_started",title:"Getting started",sidebar_label:"Getting started"},s=void 0,l={},c=[{value:"Embedding H5Live player on your own web page",id:"embedding-h5live-player-on-your-own-web-page",level:2},{value:"Option 1: Configuration with bintu stream group",id:"option-1-configuration-with-bintu-stream_group",level:3},{value:"Option 2: Simple configuration with RTMP streamname",id:"option-2-simple-configuration-with-RTMP-streamname",level:3},{value:"Option 3: Custom configuration with RTMP streamname",id:"option-3-custom-configuration-with-RTMP-streamname",level:3},{value:"Option 4: Configuration with bintu stream id",id:"option-4-configuration-with-bintu-stream-id",level:3},{value:"Frameworks",id:"frameworks",level:2},{value:"Vue.js",id:"vuejs",level:3},{value:"React.js",id:"reactjs",level:3},{value:"Configuration steps",id:"configuration-steps",level:3},{value:"Wordpress",id:"wordpress",level:2}];function d(n){const e={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"embedding-h5live-player-on-your-own-web-page",children:"Embedding H5Live player on your own web page"}),"\n",(0,r.jsx)(e.p,{children:"There are a few options when it comes to implementing H5Live player on your web page depending on your needs, we will walk you through each of them."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Basically, there are 4 options for configuration:"})}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#option-1-configuration-with-bintu-stream_group",children:(0,r.jsx)(e.strong,{children:"Configuration with bintu stream group (since v4.18.0)"})})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#option-2-simple-configuration-with-RTMP-streamname",children:(0,r.jsx)(e.strong,{children:"Simple configuration with RTMP streamname (since v4.13.0)"})})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#option-3-custom-configuration-with-RTMP-streamname",children:(0,r.jsx)(e.strong,{children:"Custom configuration with RTMP streamname"})})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#option-4-configuration-with-bintu-stream-id",children:(0,r.jsx)(e.strong,{children:"Configuration with bintu stream id"})})}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"option-1-configuration-with-bintu-stream_group",children:"Option 1: Configuration with bintu stream group"}),"\n",(0,r.jsxs)(e.p,{children:["Bintu stream group configuration was introduced in ",(0,r.jsx)(e.strong,{children:"nanoStream H5Live Player Version 4.18.0"})," and is available a single and multiple streams. It is the easiest player configuration available especially for ABR setup.\nFor more than one stream it is necessary to add a ",(0,r.jsx)(e.code,{children:"'startIndex'"})," or ",(0,r.jsx)(e.code,{children:"'group.startQuality'"}),"."]}),"\n",(0,r.jsx)(e.admonition,{type:"info",children:(0,r.jsxs)(e.p,{children:["More information about stream group configuration, can be found in the feature description: ",(0,r.jsx)(e.a,{href:"./nanoplayer_feature_stream_group_configuration",children:"Stream group configuration"})]})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-html",metastring:'title="nanoplayer.html" live',live:!0,children:"<div id='playerDiv'></div>\n<script src='https://demo.nanocosmos.de/nanoplayer/api/release/nanoplayer.4.min.js'><\/script>\n<script>\nvar player;\nvar config = {\n   'source': {\n        'group': {\n            'id': 'xxxxxxxx-zzzz-yyy-aaaa-aaabbbcccddd', // your streamgroup id\n            'security': {\n                'jwtoken': 'xxx' // your security token if applicable\n            },\n            'apiurl': 'https://bintu.nanocosmos.de', // optional\n            'startQuality': 'medium' // optional\n        },\n         \"options\": {\n            \"adaption\": {\n                \"rule\": \"deviationOfMean2\" // enable ABR\n            },\n            \"switch\": {\n                'method': 'server',\n                'pauseOnError': false,\n                'forcePlay': true\n                'timeout': 10,\n            }\n        },\n    },\n    'playback': {\n        'autoplay': true,\n        'automute': true,\n        'muted': false,\n        'faststart': true,\n        'latencyControlMode': 'balancedadaptive'\n    }\n};\ndocument.addEventListener('DOMContentLoaded', function () {\n    player = new NanoPlayer('playerDiv');\n    player.setup(config).then(function (config) {\n        console.log('setup success');\n        console.log('config: ' + JSON.stringify(config, undefined, 4));\n    }, function (error) {\n        alert(error.message);\n    });\n});\n<\/script>\n"})}),"\n",(0,r.jsx)(e.h3,{id:"option-2-simple-configuration-with-RTMP-streamname",children:"Option 2: Simple configuration with RTMP streamname"}),"\n",(0,r.jsxs)(e.p,{children:["Using source defaults with standard nanoStream Cloud was introduced in ",(0,r.jsx)(e.strong,{children:"nanoStream H5Live Player Version 4.13.0"}),". By passing ",(0,r.jsx)(e.code,{children:"defaults.service"})," with the value ",(0,r.jsx)(e.code,{children:"'bintu'"}),", the bintu defaults values for ",(0,r.jsx)(e.code,{children:"h5live.server"})," and ",(0,r.jsx)(e.code,{children:"h5live.rtmp.url"})," will be applied which means that adding it on your side is not needed."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-html",metastring:'title="nanoplayer.html"',children:"<div id='playerDiv'></div>\n<script src='https://demo.nanocosmos.de/nanoplayer/api/release/nanoplayer.4.min.js'><\/script>\n<script>\nvar player;\nvar config = {\n   'source': {\n            'defaults': {\n                'service': 'bintu'\n            },\n            'entries': [\n                    {\n                        'h5live': {\n                            'rtmp': {\n                                'streamname': 'XXXXX-YYYYY' // your rtmp streamname\n                            }\n                        }\n                    }\n            ]\n        },\n    'playback': {\n        'autoplay': true,\n        'automute': true,\n        'muted': false,\n        'faststart': true,\n        'latencyControlMode': 'balancedadaptive'\n    },\n};\ndocument.addEventListener('DOMContentLoaded', function () {\n    player = new NanoPlayer('playerDiv');\n    player.setup(config).then(function (config) {\n        console.log('setup success');\n        console.log('config: ' + JSON.stringify(config, undefined, 4));\n    }, function (error) {\n        alert(error.message);\n    });\n});\n<\/script>\n"})}),"\n",(0,r.jsx)(e.admonition,{type:"tip",children:(0,r.jsxs)(e.p,{children:["The configuration with ",(0,r.jsx)(e.code,{children:"source.defaults.service"})," allows for combinations with custom server or RTMP urls. More examples and full documentation of the source defaults feature can be found here: ",(0,r.jsx)(e.a,{href:"./nanoplayer_feature_source_defaults",children:"Source defaults"}),"."]})}),"\n",(0,r.jsx)(e.h3,{id:"option-3-custom-configuration-with-RTMP-streamname",children:"Option 3: Custom configuration with RTMP streamname"}),"\n",(0,r.jsx)(e.p,{children:"In most cases the simple RTMP configuration is sufficient but in case of enhanced flexibility needed or usage of older version of nanoplayer (until 4.13.0), this is a recommended configuration."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-html",metastring:'title="nanoplayer.html"',children:"<div id='playerDiv'></div>\n<script src='https://demo.nanocosmos.de/nanoplayer/api/release/nanoplayer.4.min.js'><\/script>\n<script>\nvar player;\nvar streamName = 'XXXXX-YYYYY'; // your bintu stream name (not the stream ID)\nvar config = {\n    'source': {\n        'entries': [\n            {\n                'h5live': {\n                    'rtmp': {\n                        'url': 'rtmp://bintu-play.nanocosmos.de:80/play',\n                        'streamname': streamName\n                    },\n                    'server': {\n                        'websocket': 'wss://bintu-h5live.nanocosmos.de:443/h5live/stream/stream.mp4',\n                        'hls': 'https://bintu-h5live.nanocosmos.de:443/h5live/http/playlist.m3u8',\n                        'progressive': 'https://bintu-h5live.nanocosmos.de:443/h5live/http/stream.mp4'\n                    }\n                }\n            }\n        ]\n    },\n    'playback': {\n        'autoplay': true,\n        'automute': true,\n        'muted': false,\n        'faststart': true,\n        'latencyControlMode': 'balancedadaptive'\n    },\n};\ndocument.addEventListener('DOMContentLoaded', function () {\n    player = new NanoPlayer('playerDiv');\n    player.setup(config).then(function (config) {\n        console.log('setup success');\n        console.log('config: ' + JSON.stringify(config, undefined, 4));\n    }, function (error) {\n        alert(error.message);\n    });\n});\n<\/script>\n"})}),"\n",(0,r.jsx)(e.h3,{id:"option-4-configuration-with-bintu-stream-id",children:"Option 4: Configuration with bintu stream id"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-html",children:"<div id='playerDiv'></div>\n<script src='https://demo.nanocosmos.de/nanoplayer/api/release/nanoplayer.4.min.js'><\/script>\n<script>\nvar player;\nvar streamId = '1111-2222-3333-4444-5555'; // your bintu stream ID (not the stream name)\nvar config = {\n    'source': {\n        'entries': [\n            {\n                'bintu': {\n                    'streamid': streamId\n                }\n            }\n        ]\n    },\n    'playback': {\n        'autoplay': true,\n        'automute': true,\n        'muted': false,\n        'faststart': true,\n        'latencyControlMode': 'balancedadaptive'\n    }\n};\ndocument.addEventListener('DOMContentLoaded', function () {\n    player = new NanoPlayer('playerDiv');\n    player.setup(config).then(function (config) {\n        console.log('setup success');\n        console.log('config: ' + JSON.stringify(config, undefined, 4));\n    }, function (error) {\n        alert(error.message);\n    });\n});\n<\/script>\n"})}),"\n",(0,r.jsx)(e.h2,{id:"frameworks",children:"Frameworks"}),"\n",(0,r.jsx)(e.h3,{id:"vuejs",children:"Vue.js"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"Useful link:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://github.com/nanocosmos/nanoplayer-vuejs-sample",children:"GitHub repository"})}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Embedding the H5LivePlayer in your Vue.js project is simple:"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["Include the provided ",(0,r.jsx)(e.code,{children:"nanoplayer.4.min.js"})," script within your ",(0,r.jsx)(e.code,{children:"index.html"})," in your ",(0,r.jsx)(e.code,{children:"root"})," directory"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-html",metastring:'title="index.html"',children:"<script src='https://demo.nanocosmos.de/nanoplayer/api/release/nanoplayer.4.min.js'><\/script>\n"})}),"\n",(0,r.jsx)(e.p,{children:"Example"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-html",metastring:'title="index.html"',children:"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset='utf-8'>\n    <meta name='viewport' content='width=device-width,initial-scale=1.0'>\n    <title>h5-live-player</title>\n    <script src='https://demo.nanocosmos.de/nanoplayer/api/release/nanoplayer.4.min.js'><\/script>\n</head>\n<body>\n    <div id='app'></div>\n</body>\n</html>\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create a new Vue Component with a simple div as a placeholder that will contain player the content."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"<div id='playerDiv'></div>\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["Add a new variable called ",(0,r.jsx)(e.code,{children:"config"})," to your ",(0,r.jsx)(e.code,{children:"data() method"})," inside your component"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:" export default {\n     data() {\n         return {\n             'config': {\n                 'source': {\n                     'defaults': {\n                         'service': 'bintu'\n                     },\n                     'entries': [\n                         {\n                             'h5live': {\n                                 'rtmp': {\n                                     'streamname': 'XXXXX-YYYYY' // your rtmp streamname\n                                 }\n                             }\n                         }\n                     ]\n                 },\n                 'playback': {\n                     'autoplay': true,\n                     'automute': true,\n                     'muted': false,\n                     'faststart': true,\n                     'latencyControlMode': 'balancedadaptive'\n                 }\n             }\n         }\n     }\n }\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["Instantiate the NanoPlayer inside the ",(0,r.jsx)(e.code,{children:"mounted()"})," lifecycle hook"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"export default {\n    data() { ... },\n    mounted: function(){\n        var nanoPlayer = new window.NanoPlayer('playerDiv');\n        nanoPlayer.setup(this.config).then(function (config) {\n            console.log('setup success');\n            console.log('config: ' + JSON.stringify(config, undefined, 4));\n        }, function (error) {\n            alert(error.message);\n        });\n    }\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"Now you should see the player running in your browser's window."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"reactjs",children:"React.js"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"Useful links:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://github.com/nanocosmos/nanoplayer-react-sample.git",children:"GitHub repository"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://demo.nanocosmos.de/nanoplayer/react/",children:"Sample app"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"configuration-steps",children:"Configuration steps"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["Import your minified nanoplayer version within your ",(0,r.jsx)(e.code,{children:"index.html"})," in your ",(0,r.jsx)(e.code,{children:"public"})," directory"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-html",metastring:'title="index.html"',children:"<script  src='https://demo.nanocosmos.de/nanoplayer/api/release/nanoplayer.4.min.js'><\/script>\n"})}),"\n",(0,r.jsx)(e.p,{children:"Example:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-html",metastring:'title="index.html"',children:"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset='utf-8' />\n    <meta name='viewport' content='width=device-width, initial-scale=1' />\n    <script src='https://demo.nanocosmos.de/nanoplayer/api/release/nanoplayer.4.min.js'><\/script>\n    <title>H5Live Player</title>\n</head>\n<body>\n    <div id='root'></div>\n</body>\n</html>\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["Create a React Component with a ",(0,r.jsx)(e.code,{children:"div"})," tag, to create an entry point for the player"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"<div id='playerDiv' />\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["Add a ",(0,r.jsx)(e.code,{children:"config"})," object to your ",(0,r.jsx)(e.code,{children:"state"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"let config = {\n    'source': {\n        'defaults': {\n            'service': 'bintu'\n        },\n        'entries': [\n                {\n                    'h5live': {\n                        'rtmp': {\n                            'streamname': 'XXXXX-YYYYY' // your rtmp streamname\n                        }\n                    }\n                }\n        ]\n    },\n    'playback': {\n        'autoplay': true,\n        'automute': true,\n        'muted': false,\n        'faststart': true,\n        'latencyControlMode': 'balancedadaptive'\n    }\n};\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Setup the player"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"function setupNanoplayer(config) {\n    var nanoPlayer = new window.NanoPlayer('playerDiv');\n\n    nanoPlayer.setup(config).then(function (config) {\n        console.log('setup success');\n        console.log('config: ' + JSON.stringify(config, undefined, 4));\n    }, function (error) {\n        alert(error.message);\n    });\n};\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"If you are using React Hooks, initialize the setup like this:"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"useEffect(() => {\n    setupNanoplayer(config);\n}, [])\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"If you are not using React Hooks, initialize the setup like this:"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"componentDidMount() {\n    setupNanoplayer(this.state.config);\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"wordpress",children:"Wordpress"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Add a block and choose Custom HTML"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Embed the Player"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["It is important to add a wrapper around the ",(0,r.jsx)(e.code,{children:"playerDiv"})," element, otherwise you won't see the nanoStream H5Live Player"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-html",children:"<script src='https://demo.nanocosmos.de/nanoplayer/api/release/nanoplayer.4.min.js'><\/script>\n<div style='width: 480px; height: 360px; overflow: hidden; position: absolute; margin: 0; padding: 0;'>\n<div id='playerDiv'></div>\n</div>\n\n<script>\n        var player;\n        var streamName = 'XXXXX-YYYYY'; // your bintu stream name (not the stream ID)\n        var config = {\n            'source': {\n                'defaults': {\n                    'service': 'bintu'\n                },\n                'entries': [\n                    {\n                        'h5live': {\n                            'rtmp': {\n                                'streamname': 'XXXXX-YYYYY' // your rtmp streamname\n                            }\n                        }\n                    }\n                ]\n            },\n            'playback': {\n                'autoplay': true,\n                'automute': true,\n                'muted': false,\n                'faststart': true,\n                'latencyControlMode': 'balancedadaptive'\n            }\n        };\n        player = new NanoPlayer('playerDiv');\n        player.setup(config).then(function (config) {\n            console.log('setup success');\n            console.log('config: ' + JSON.stringify(config, undefined, 4));\n        }, function (error) {\n            alert(error.message);\n        });\n<\/script>\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.admonition,{title:"More Information",type:"tip",children:(0,r.jsxs)(e.p,{children:["Find a product overview and live demo ",(0,r.jsx)(e.a,{href:"https://www.nanocosmos.de/h5live",children:"here"}),". ",(0,r.jsx)("br",{}),"\nOur API documentation can be found ",(0,r.jsx)(e.a,{href:"./nanoplayer_api",children:"here"}),"."]})}),"\n",(0,r.jsx)(e.admonition,{title:"Questions?",type:"info",children:(0,r.jsxs)(e.p,{children:["For business related questions reach out to our dedicated sales team via the ",(0,r.jsx)(e.a,{href:"https://www.nanocosmos.de/contact",children:"contact form"})," or by sending an email to sales(at)nanocosmos.de. ",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(e.strong,{children:["For technical questions you can use our ",(0,r.jsx)(e.a,{href:"https://www.nanocosmos.de/support",children:"support form"}),"."]})]})})]})}function p(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>s});var i=t(96540);const r={},a=i.createContext(r);function o(n){const e=i.useContext(a);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),i.createElement(a.Provider,{value:e},n.children)}}}]);