"use strict";(self.webpackChunknanocosomos_documentation=self.webpackChunknanocosomos_documentation||[]).push([[9340],{28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>d});var n=i(96540);const s={},c=n.createContext(s);function r(e){const t=n.useContext(c);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(c.Provider,{value:t},e.children)}},72650:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>v,frontMatter:()=>r,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"webrtc-v5/nanostream_webrtc_device_selection","title":"Device Selection","description":"The Webcaster API gives you the possibility to present all currently attached audio and video devices to your users.","source":"@site/docs/webrtc-v5/nanostream_webrtc_device_selection.md","sourceDirName":"webrtc-v5","slug":"/webrtc-v5/nanostream_webrtc_device_selection","permalink":"/docs/webrtc-v5/nanostream_webrtc_device_selection","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1752847376000,"frontMatter":{"id":"nanostream_webrtc_device_selection","title":"Device Selection","sidebar_label":"Device Selection"},"sidebar":"nanoStream Webcaster V5","previous":{"title":"Quality Settings","permalink":"/docs/webrtc-v5/nanostream_webrtc_quality"},"next":{"title":"Audio- / Video-Only","permalink":"/docs/webrtc-v5/nanostream_webrtc_audio_video_only"}}');var s=i(74848),c=i(28453);const r={id:"nanostream_webrtc_device_selection",title:"Device Selection",sidebar_label:"Device Selection"},d=void 0,o={},a=[{value:"Preparation",id:"preparation",level:2},{value:"Request and render devices",id:"request-and-render-devices",level:2},{value:"Start the preview",id:"start-the-preview",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["The Webcaster API gives you the possibility to present all currently attached audio and video devices to your users.\nThe API call to requrest the device list is ",(0,s.jsx)(t.a,{href:"./nanostream_webrtc_api#rtcusergetdevices",children:"getDevices()"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["You will receive the list of devices in the ",(0,s.jsx)(t.a,{href:"./nanostream_webrtc_api#receiveddevicelist",children:"ReceivedDeviceList"})," event. After that you can show this list to the user, so he can choose which devices he wants to be used for the Webcast."]}),"\n",(0,s.jsx)(t.h2,{id:"preparation",children:"Preparation"}),"\n",(0,s.jsxs)(t.p,{children:["We will need two ",(0,s.jsx)(t.code,{children:"<select>"})," tags in our HTML document, in order to display the attached audio & video devices in your HTML document. Also we will add a button to trigger the ",(0,s.jsx)(t.a,{href:"./nanostream_webrtc_api#rtcuserstartpreviewconfig",children:"startPreview(previewConfig)"})," call after we made our device selection in the UI and a video element to show the preview in."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",children:'// in your html body\n<video id="video-preview" autoplay playsinline muted></video>\n\n<select id="audio-device-list"></select>\n<select id="video-device-list"></select>\n\n<button id="start-preview-button" type="button">start preview</button>\n'})}),"\n",(0,s.jsx)(t.p,{children:"Also we will create a Javascript function that populates above device selection lists later on."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"// adds options to a select element\nvar createSelectOptions = function (elementId, devices) {\n\n  var selectOptions = document.getElementById(elementId).options;\n\n  // Add all devices by id and index\n  for (var device of devices) {\n    selectOptions[selectOptions.length] = new Option(device.id, device.index);\n  }\n\n};\n"})}),"\n",(0,s.jsx)(t.h2,{id:"request-and-render-devices",children:"Request and render devices"}),"\n",(0,s.jsxs)(t.p,{children:["Next we will create an instance of the Webcaster API and request attached devices with the ",(0,s.jsx)(t.a,{href:"./nanostream_webrtc_api#rtcusergetdevices",children:"getDevices()"})," call."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"// create an instance of the API\nvar user = new window.nanowebrtc.user();\n\nuser.on('ReceivedDeviceList', function(event) {\n\n  // device lists are arrays, received in event.data.devices\n  var audioDevices = event.data.devices.audiodevices;\n  var videoDevices = event.data.devices.videodevices;\n\n  createSelectOptions('audio-device-list', audioDevices);\n  createSelectOptions('video-device-list', videoDevices);\n\n});\n\n// request device list, will fire 'ReceivedDeviceList' event\nuser.getDevices();\n"})}),"\n",(0,s.jsx)(t.h2,{id:"start-the-preview",children:"Start the preview"}),"\n",(0,s.jsx)(t.p,{children:"Once a user has selected audio and video devices from the lists, the preview can be started."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"// we will trigger the preview once the 'start-preview-button' has been clicked.\ndocument.getElementById('start-preview-button').addEventListener('click', function() {\n\n  // get the index of the selected audio device\n  var audioDeviceList = document.getElementById('audio-device-list');\n  var audioDeviceIndex = audioDeviceList.options[audioDeviceList.selectedIndex].value;\n\n  // get the index of the selected video device\n  var videoDeviceList = document.getElementById('video-device-list');\n  var videoDeviceIndex = videoDeviceList.options[videoDeviceList.selectedIndex].value;\n\n  var previewConfig = {\n      audioDeviceConfig: {device: audioDeviceIndex},\n      videoDeviceConfig: {device: videoDeviceIndex},\n      elementId: 'video-preview'\n  };\n\n  user.startPreview(previewConfig);\n\n});\n"})})]})}function v(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);